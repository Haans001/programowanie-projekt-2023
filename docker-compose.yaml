version: "3.8"
services:
  frontend:
    image: node:16-alpine
    container_name: prog-front
    working_dir: /app
    networks:
      - network
    environment:
      - NODE_ENV=development
    volumes:
      - ./app:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run dev"
    depends_on:
      - backend
  backend:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    container_name: prog-backend
    working_dir: /app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./api:/app
    ports:
      - "5000:5000"
    command: sh -c "dotnet restore && dotnet watch run --urls=http://0.0.0.0:5000"
    depends_on:
      - db
  db:
    image: mysql:8.0
    container_name: prog-db
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - prog_db:/var/lib/mysql

volumes:
  frontend_node_modules:
  prog_db:

networks:
  network:
    driver: bridge
